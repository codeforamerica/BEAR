version: 2
jobs:
  build:
    docker:
      - image: circleci/node:11.14-browsers

    working_directory: ~/bear

    steps:
      - checkout

      - run:
          name: Fetch gogen binary
          command: |
            export TOKEN=$GITHUB_ACCESS_TOKEN
            mkdir -p ~/go/bin
            bash ~/bear/.circleci/github_download_release.sh "latest" ~/go/bin/gogen
            chmod +x ~/go/bin/gogen

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Run unit tests
          command: yarn build && yarn test

      - run:
          name: Run end-to-end tests
          command: START_MINIMIZED=true yarn build-e2e && yarn test-e2e

      - run:
          name: Build and Publish for Windows
          command: |
            sudo dpkg --add-architecture i386
            wget -nc https://dl.winehq.org/wine-builds/winehq.key
            sudo apt-key add winehq.key
            sudo sh -c 'echo "deb https://dl.winehq.org/wine-builds/debian/ stretch main"  >> /etc/apt/sources.list.d/wine.list'
            sudo apt install apt-transport-https
            sudo apt update
            sudo apt install --install-recommends winehq-stable
            echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | sudo debconf-set-selections
            sudo apt-get install -y wine
            yarn package-win

  deploy:
    docker:
      - image: cibuilds/github:0.10

    steps:
      - attach_workspace:
          at: ./release

      - run: |
          VERSION=0.0.1
          ghr -t ${GITHUB_ACCESS_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./release/
workflows:
  version: 2
  build-workflow:
    jobs:
      - build
      - hold:
          type: approval
          requires:
            - build
      - deploy:
          requires:
            - hold
