version: 2
jobs:
  build:
    docker:
      - image: codeforamerica/bear-ci

    working_directory: ~/bear

    steps:
      - checkout

      - run:
          name: Fetch gogen binary
          command: |
            mkdir -p ~/go/bin
            curl -Ls https://github.com/codeforamerica/gogen/releases/download/"$(cat ~/bear/.gogen-version)"/gogen_linux -o ~/go/bin/gogen
            chmod +x ~/go/bin/gogen

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Run unit tests
          command: yarn build && yarn test

      - run:
          name: Run end-to-end tests
          command: START_MINIMIZED=true yarn build-e2e && yarn test-e2e && yarn test-ci-e2e

  package-and-draft:
    docker:
      - image: codeforamerica/bear-ci

    working_directory: ~/bear

    steps:
      - checkout

      - run:
          name: Fetch gogen binary
          command: |
            curl -Ls https://github.com/codeforamerica/gogen/releases/download/"$(cat ~/bear/.gogen-version)"/gogen__win./exe -o ./gogen.exe

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Build and Publish Draft for Windows
          command: |
            export GH_TOKEN=$GITHUB_ACCESS_TOKEN
            yarn package-publish-win

workflows:
  version: 2
  pipeline:
    jobs:
      - build
      - package-and-draft:
          requires:
            - build
          filters:
            branches:
              only:
                - master
